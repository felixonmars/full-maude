load wrapper.maude

mod GOOD-WRAPPER{CS :: CLIENT-SERVER} is
  pr WRAPPER{CS} .
  pr SET{Oid} .

  var  C : CS$ClientId .
  var  VClient : CS$Client .
  var  S : CS$ServerId .
  var  VServer : CS$Server .
  vars O O1 O2 : Oid .
  vars Atts Atts1 Atts2 : AttributeSet .
  var  Conf : [Configuration] . ---- __ defined at the kind level, mbs give warnings owise
  vars ServerIds ClientIds : Set{Oid} .
  var  Request : CS$Request .
  var  Response : CS$Response .

  ---- ---------------------------------
  ---- Good Client-Server Configurations
  ---- ---------------------------------
  sort GoodConfig . 
  subsorts GoodConfig < Configuration .
  cmb Conf : GoodConfig if isGoodConfig(Conf) .

  op isGoodConfig : Configuration ~> Bool .
  op wellFormed : Configuration ~> Bool .
  op wellFormed : Configuration Set{Oid} Set{Oid} ~> Bool .
  op noReapeatedIds : Configuration ~> Bool .
  op noDanglingRefs : Configuration ~> Bool .
  op getIds : Configuration ~> Set{Oid} .
  op getServerIds : Configuration ~> Set{Oid} .
  op getClientIds : Configuration ~> Set{Oid} .
  
  eq isGoodConfig(Conf) 
    = wellFormed(Conf)
      and
      noReapeatedIds(Conf) 
      and 
      noDanglingRefs(Conf) .

  eq wellFormed(Conf) 
    = wellFormed(Conf, getServerIds(Conf), getClientIds(Conf)) .
  
  eq wellFormed(< C : VClient | assoc-serv : S > Conf, ServerIds, ClientIds) 
    = wellFormed(Conf, ServerIds, ClientIds) .
  eq wellFormed(< S : VServer | none > Conf, ServerIds, ClientIds) 
    = wellFormed(Conf, ServerIds, ClientIds) .
  eq wellFormed((to S, Request from C) Conf, ServerIds, ClientIds) 
    = S in ServerIds 
      and 
      C in ClientIds
      and 
      wellFormed(Conf, ServerIds, ClientIds) .
  eq wellFormed((to C, Response from S) Conf, ServerIds, ClientIds) 
    = S in getServerIds(Conf) 
      and 
      C in getClientIds(Conf) 
      and 
      wellFormed(Conf, ServerIds, ClientIds) .
  eq wellFormed(none, ServerIds, ClientIds) = true . 

  eq noReapeatedIds(< C : VClient | assoc-serv : S, Atts > Conf) 
    = not(C in getIds(Conf)) 
      and 
      noReapeatedIds(Conf) . 
  eq noReapeatedIds(< S : VServer | Atts > Conf) 
    = not(S in getIds(Conf)) 
      and 
      noReapeatedIds(Conf) .
  eq noReapeatedIds((to S, Request from C) Conf) = noReapeatedIds(Conf) .
  eq noReapeatedIds((to C, Response from S) Conf) = noReapeatedIds(Conf) .
  eq noReapeatedIds(none) = true .

  eq noDanglingRefs(< C : VClient | assoc-serv : S, Atts > Conf) 
    = S in getServerIds(Conf) 
      and 
      noDanglingRefs(Conf) .
  eq noDanglingRefs(< S : VServer | Atts > Conf) 
    = noDanglingRefs(Conf) .
  eq noDanglingRefs((to S, Request from C) Conf) 
    = noDanglingRefs(Conf) .
  eq noDanglingRefs((to C, Response from S) Conf) 
    = noDanglingRefs(Conf) .
  eq noDanglingRefs(none) = true .

  eq getIds(< C : VClient | assoc-serv : S, Atts > Conf) 
    = (C, getIds(Conf)) .
  eq getIds(< S : VServer | Atts > Conf) = (S, getIds(Conf)) .
  eq getIds((to S, Request from C) Conf) = getIds(Conf) .
  eq getIds((to C, Response from S) Conf) = getIds(Conf) .
  eq getIds(none) = empty .

  eq getServerIds(< C : VClient | assoc-serv : S, Atts > Conf) 
    = getServerIds(Conf) .
  eq getServerIds(< S : VServer | Atts > Conf) = (S, getServerIds(Conf)) .
  eq getServerIds((to S, Request from C) Conf) = getServerIds(Conf) .
  eq getServerIds((to C, Response from S) Conf) = getServerIds(Conf) .
  eq getServerIds(none) = empty .

  eq getClientIds(< C : VClient | assoc-serv : S, Atts > Conf) 
    = (C, getClientIds(Conf)) .
  eq getClientIds(< S : VServer | Atts > Conf) = getClientIds(Conf) .
  eq getClientIds((to S, Request from C) Conf) = getClientIds(Conf) .
  eq getClientIds((to C, Response from S) Conf) = getClientIds(Conf) .
  eq getClientIds(none) = empty .
endm
